valaccode_sources = [
	'valaccodeassignment.vala',
	'valaccodebinaryexpression.vala',
	'valaccodeblock.vala',
	'valaccodebreakstatement.vala',
	'valaccodecasestatement.vala',
	'valaccodecastexpression.vala',
	'valaccodecommaexpression.vala',
	'valaccodecomment.vala',
	'valaccodeconditionalexpression.vala',
	'valaccodeconstant.vala',
	'valaccodecontinuestatement.vala',
	'valaccodedeclaration.vala',
	'valaccodedeclarator.vala',
	'valaccodedostatement.vala',
	'valaccodeelementaccess.vala',
	'valaccodeemptystatement.vala',
	'valaccodeenum.vala',
	'valaccodeenumvalue.vala',
	'valaccodeexpressionstatement.vala',
	'valaccodeexpression.vala',
	'valaccodefile.vala',
	'valaccodeforstatement.vala',
	'valaccodefragment.vala',
	'valaccodefunctioncall.vala',
	'valaccodefunctiondeclarator.vala',
	'valaccodefunction.vala',
	'valaccodeggnucsection.vala',
	'valaccodegotostatement.vala',
	'valaccodeidentifier.vala',
	'valaccodeifsection.vala',
	'valaccodeifstatement.vala',
	'valaccodeincludedirective.vala',
	'valaccodeinitializerlist.vala',
	'valaccodeinvalidexpression.vala',
	'valaccodelabel.vala',
	'valaccodelinedirective.vala',
	'valaccodemacroreplacement.vala',
	'valaccodememberaccess.vala',
	'valaccodemodifiers.vala',
	'valaccodenewline.vala',
	'valaccodenode.vala',
	'valaccodeoncesection.vala',
	'valaccodeparameter.vala',
	'valaccodeparenthesizedexpression.vala',
	'valaccodereturnstatement.vala',
	'valaccodestatement.vala',
	'valaccodestruct.vala',
	'valaccodeswitchstatement.vala',
	'valaccodetypedefinition.vala',
	'valaccodeunaryexpression.vala',
	'valaccodevariabledeclarator.vala',
	'valaccodewhilestatement.vala',
	'valaccodewriter.vala'
]

valaccode_lib = static_library(
	'valaccode',
	valaccode_sources,
	dependencies: [glib, gobject, valagee, valacore],
	install: false,
	include_directories: include_directories('.', '..'),
	vala_args: ['--pkg=config', '--vapidir=' + join_paths(meson.source_root(), 'vapi')],
	vala_vapi: 'valaccode.vapi',
	vala_header: 'valaccode.h'
)

valaccode = declare_dependency(link_with: [valaccode_lib], include_directories: include_directories('.'))

install_headers('valaccode.h', subdir: 'vala@0@'.format(vala_version_suffix), from_build: true)
